{% html "head" %}
<link rel="preconnect" href="https://cdn.maptiler.com/" crossorigin />
<link rel="dns-prefetch" href="https://cdn.maptiler.com/" />

<link href="https://cdn.maptiler.com/maptiler-sdk-js/latest/maptiler-sdk.css" rel="stylesheet" media="print" onload="this.media='all'" />
<noscript>
  <link rel="stylesheet" href="https://cdn.maptiler.com/maptiler-sdk-js/latest/maptiler-sdk.css">
</noscript>
{% endhtml %}
{% html "footer" %}
<script src="https://cdn.maptiler.com/maptiler-sdk-js/latest/maptiler-sdk.umd.min.js" defer onload="drawMap()"></script>
{% endhtml %}

<style>
{% css %}
  #map-site {
    width: 100%;
    height: 25rem;
    border-radius: 0.5rem;
    background-color: var(--secondary);
    {# position: relative; #}
  }
  #map-style-switcher {
    {# position: absolute;
    top: 205px;
    right: 10px;
    z-index: 1; #}
  }
  .maplibregl-ctrl-icon {
    background-size: 60%;
    background-position: 50% 50%;
    background-repeat: no-repeat;
    filter: invert(33%) sepia(480%) saturate(0%) hue-rotate(182deg) brightness(89%) contrast(85%);

    &.maplibregl-ctrl-outdoor {
      background-image: url("/static/icon/ic_live_srtm@3x.png");
    }
    &.maplibregl-ctrl-topo {
      background-image: url("/static/icon/map_action_trekking_dark@3x.png");
      background-size: 80%;
    }
    &.maplibregl-ctrl-satellite {
      background-image: url("/static/icon/map_world_globe_dark@3x.png");
    }
  }
  .maplibregl-ctrl-bottom-left a[aria-label="Mapbox logo"] {
    display: none !important;
  }
{% endcss %}
</style>

<div id="map-site">
  <div id="map-style-switcher" class="maplibregl-ctrl maplibregl-ctrl-group" hidden>
    <button id="style-outdoor" class="maplibregl-ctrl-icon maplibregl-ctrl-outdoor" title="Outdoor"></button>
    <button id="style-topo" class="maplibregl-ctrl-icon maplibregl-ctrl-topo" title="Topo"></button>
    <button id="style-hybrid" class="maplibregl-ctrl-icon maplibregl-ctrl-satellite" title="Satellite"></button>
  </div>
</div>

<script>
  {% js %}
  const isTouchDevice = () => (('ontouchstart' in window) || (navigator.maxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0));
  var drawMap = () => {
    // Parse the takeoffs from the json string and adjust the data
    const takeoffs = {{ takeoffs | adjustCoordinates | safe }}
    const landings = {{ landings | adjustCoordinates | safe }}

    maptilersdk.config.apiKey = 'Rbbu3nsbqSZW7WjHyQEk';
    const map = new maptilersdk.Map({
      container: 'map-site', // container's id or the HTML element to render the map
      style: "outdoor",
      // style: 'bad49809-c61a-41fe-a212-9b1f58c1a8f8', // "topo" "topo-v2"
      center: takeoffs[0], // starting position [lng, lat]
      zoom: 13, // starting zoom
      // maxZoom: 14,
      minZoom: 9,
      geolocateControl: false, //disable the geolocate control
      attributionControl: false,
      fullscreenControl: true,
      scaleControl: "bottom-left",
      terrain: true,
      terrainControl: true,
      pitch: 35,
      maxPitch: 70,
      scrollZoom: false,
      cooperativeGestures: isTouchDevice(),
    });

    {#// FIXME: move attribution control to bottom left
      // https://github.com/maptiler/maplibre-gl-js-samples/blob/main/control-minimap/code.html
      map.addControl(new maptilersdk.AttributionControl({ compact: true}), 'bottom-left');
    #}

    // Add the markers while setting the bounds
    const bounds = new maptilersdk.LngLatBounds();
    let takeoffCounter = landingCounter = 0;

    [...takeoffs, ...landings].map((location, i) => {
      const isTakeoff = i < takeoffs.length;
      const markerColor = isTakeoff ? 'var(--blue)' : 'var(--green)';
      const markerType = isTakeoff ? 'ðŸª‚ Decollo' : 'ðŸŽ¯ Atterraggio';
      let num = '';

      if (isTakeoff) {
        takeoffCounter++;
        num = takeoffCounter > 1 ? takeoffCounter : '';
      } else {
        landingCounter++;
        num = landingCounter > 1 ? landingCounter : '';
      }

      const marker = new maptilersdk.Marker({ color: markerColor }).setLngLat(location).addTo(map);
      bounds.extend(location);

      const popup = new maptilersdk.Popup({ closeButton: true })
        .setHTML(`<h3>${markerType} ${num}</h3><p><a href="https://maps.google.com/maps?q=${location[1]},${location[0]}" target="_blank">Naviga qui</a></p>`);
      marker.setPopup(popup);
    });

    map.on('load', () => {
      let mapSwitcher = document.getElementById('map-style-switcher');
      // Add the style switcher listener
      document.getElementsByClassName('maplibregl-ctrl-top-left')[0].appendChild(mapSwitcher);
      let styles = ['outdoor', 'topo', 'hybrid'];
      styles.map(style => {
        document.getElementById('style-' + style).addEventListener('click', function() {
          map.setStyle('https://api.maptiler.com/maps/' + style + '/style.json?key=' + maptilersdk.config.apiKey);
        });
      });
      // Settimeout to fix the maptiler bug
      setTimeout(() => {
        map.fitBounds(bounds, { padding: 40 });
        mapSwitcher.removeAttribute('hidden');
      }, 100);
    });
  }
  {% endjs %}
</script>